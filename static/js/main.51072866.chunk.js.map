{"version":3,"sources":["Main.elm","serviceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","A2","A3","A4","A5","A6","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","_Debug_crash","push","_Utils_Tuple2","key","$","$elm$core$Dict$toList","_Utils_cmp","ord","_Utils_compare","n","$elm$core$Basics$LT","$elm$core$Basics$GT","$elm$core$Basics$EQ","_Utils_Tuple0","_Utils_Tuple3","_Utils_chr","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_append","_Utils_ap","xs","ys","root","_List_Cons","curr","_List_Nil","hd","tl","_List_cons","_List_fromArray","arr","out","i","length","_JsArray_initialize","size","offset","func","result","Array","_JsArray_initializeFromList","max","ls","_JsArray_unsafeGet","index","array","_JsArray_unsafeSet","value","_JsArray_push","_JsArray_foldl","acc","_JsArray_foldr","_JsArray_map","_JsArray_indexedMap","_JsArray_slice","from","to","slice","_JsArray_appendN","dest","source","destLen","itemsToCopy","identifier","Error","_Basics_add","_Basics_ceiling","Math","ceil","_Basics_floor","floor","_Basics_round","round","_Basics_log","log","_String_cons","chr","str","_String_append","_String_foldr","state","string","char","word","charCodeAt","_String_join","sep","strs","join","_Json_decodePrim","decoder","_Json_expecting","$elm$core$Result$Ok","isFinite","_Json_decodeFloat","_Json_decodeString","_Json_wrap","String","_Json_decodeField","field","_Json_andThen","callback","h","_Json_map1","d1","decoders","g","_Json_mapMany","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","$elm$core$Result$isOk","$elm$core$Result$Err","$elm$json$Json$Decode$Field","$elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","$elm$core$List$reverse","answer","errors","temp","$elm$json$Json$Decode$OneOf","$elm$json$Json$Decode$Failure","toElmValue","len","isArray","FileList","$elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Scheduler_succeed","_Scheduler_binding","_Scheduler_andThen","task","_Scheduler_onError","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Platform_effectManagers","_Platform_createManager","init","onEffects","onSelfMsg","cmdMap","subMap","_Platform_instantiateManager","info","sendToApp","router","undefined","loop","j","_Platform_sendToApp","_Platform_sendToSelf","_Platform_leaf","home","k","l","_Platform_batch","list","m","_Platform_effectsQueue","_Platform_effectsActive","_Platform_enqueueEffects","managers","cmdBag","subBag","p","q","r","fx","_Platform_dispatchEffects","effectsDict","_Platform_gatherEffects","isCmd","bag","taggers","effect","t","s","_Platform_toEffect","newEffect","effects","_Platform_insert","o","_Platform_checkPortName","name","_Platform_outgoingPortMap","tagger","_Platform_setupOutgoingPort","subs","converter","u","id","setTimeout","clearTimeout","cmdList","currentSubs","subscribe","unsubscribe","indexOf","splice","_VirtualDom_divertHrefToApp","_Platform_incomingPortMap","finalTagger","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","_VirtualDom_node","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_nodeNS","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_on","handler","_VirtualDom_style","_VirtualDom_property","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","object","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","$elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","message","v","stopPropagation","ah","currentEventNode","ad","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_element","impl","flagDecoder","debugMetadata","args","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","a3","bc","ba","initialModel","view","bd","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","nextNode","_VirtualDom_diff","cancelAnimationFrame","requestAnimationFrame","_Browser_fakeNode","_Browser_doc","_Browser_window","_Browser_on","eventName","sendToSelf","_Browser_decodeEvent","$elm$core$Maybe$Just","$elm$core$Maybe$Nothing","_Browser_setViewportOf","doStuff","getElementById","$elm$browser$Browser$Dom$NotFound","_Browser_withNode","scrollLeft","scrollTop","_Time_setInterval","interval","setInterval","clearInterval","$elm$core$List$cons","$elm$core$Dict$foldr","left","$temp$func","$temp$acc","dict","$elm$core$Elm$JsArray$foldr","$elm$core$Array$foldr","baseCase","_v0","tree","tail","helper","$elm$core$Array$toList","$elm$core$Basics$add","$elm$core$Basics$append","$elm$core$String$fromInt","number","$elm$core$String$join","chunks","_List_toArray","$elm$core$List$foldl","$elm$core$Char$toCode","code","$elm$core$Array$Array_elm_builtin","$elm$core$Elm$JsArray$empty","$elm$core$Basics$ceiling","$elm$core$Basics$logBase","base","$elm$core$Array$shiftStep","$elm$core$Array$empty","$elm$core$Elm$JsArray$initialize","$elm$core$Array$Leaf","$elm$core$Basics$floor","$elm$core$Elm$JsArray$length","$elm$core$Basics$max","$elm$core$Array$SubTree","$elm$core$Elm$JsArray$initializeFromList","$elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","$elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","$elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","$elm$core$Array$initializeHelp","fn","fromIndex","leaf","tailLen","$elm$json$Json$Decode$map","$elm$json$Json$Decode$succeed","$elm$core$Basics$identity","$elm$core$Task$succeed","$elm$core$Task$init","$elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","$elm$core$List$foldr","$elm$core$List$map","$elm$core$Task$andThen","$elm$core$Task$map","taskA","$elm$core$Task$map2","taskB","$elm$core$Task$sequence","tasks","$elm$core$Platform$sendToApp","$elm$core$Task$spawnCmd","commands","millisToPosix","$elm$core$Task$command","$elm$core$Task$perform","toMessage","$elm$browser$Browser$element","$elm$core$Platform$Cmd$batch","$elm$core$Array$fromListHelp","jsArray","remainingItems","$elm$core$Array$fromList","$elm$random$Random$Seed","$elm$random$Random$next","incr","$elm$random$Random$initialSeed","$author$project$Bounds$origin","X","Z","_","ae","aj","al","an","ao","$author$project$Types$OnScrollFinished","$elm$core$Basics$composeL","$elm$core$Task$onError","$elm$core$Task$attempt","resultToMessage","$elm$browser$Browser$Dom$setViewportOf","$author$project$State$scrollY","$elm$time$Time$now","Date","now","$author$project$State$timeForInitialSeed","$author$project$State$initialState","J","K","aV","T","E","aW","L","aZ","Y","aa","aO","W","$author$project$Types$SetBoundingClientRect","$author$project$Types$Tick","$elm$core$Platform$Sub$batch","$elm$time$Time$Every","$elm$time$Time$State","processes","aF","aN","$elm$core$Dict$RBEmpty_elm_builtin","$elm$core$Dict$empty","$elm$time$Time$init","$elm$core$Basics$compare","$elm$core$Dict$get","targetKey","right","$elm$core$Dict$RBNode_elm_builtin","$elm$core$Dict$balance","color","_v6","lRight","rK","rV","rLeft","rRight","$elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","$elm$core$Dict$insert","$elm$time$Time$addMySub","_v1","$elm$core$Process$kill","$elm$core$Dict$foldl","$elm$core$Dict$merge","leftStep","bothStep","rightStep","leftDict","rightDict","initialResult","_v3","rKey","rValue","stepState","_v2","lKey","lValue","rest","leftovers","intermediateResult","_v4","$elm$core$Platform$sendToSelf","$elm$time$Time$setInterval","$elm$core$Process$spawn","$elm$time$Time$spawnHelp","intervals","spawnTimer","_v7","kills","newTaggers","existing","spawnList","existingDict","newProcesses","time","$elm$time$Time$subscription","$elm$time$Time$every","$elm$json$Json$Decode$field","$author$project$State$keyDecoder","$elm$core$Platform$Sub$none","$elm$browser$Browser$Events$MySub","$elm$browser$Browser$Events$State","pids","aC","aM","$elm$browser$Browser$Events$init","$elm$browser$Browser$Events$addKey","sub","$elm$core$Dict$fromList","assocs","$elm$browser$Browser$Events$Event","at","ax","$elm$browser$Browser$Events$spawn","$elm$core$Dict$union","t1","t2","$elm$browser$Browser$Events$onEffects","stepRight","news","stepLeft","pid","_v5","lives","stepBoth","newSubs","livePids","makeNewPids","$elm$core$List$maybeCons","mx","$elm$core$List$filterMap","messages","exports","$elm$browser$Browser$Events$subscription","$elm$browser$Browser$Events$onKeyPress","$elm$json$Json$Decode$andThen","$elm$json$Json$Decode$float","$author$project$Bounds$setBoundingClientRect","width","top","height","bottom","subList","send","incomingValue","$author$project$State$checkLineChanged","previousViewport","currentViewport","current","$elm$core$Maybe$map","maybe","$elm$core$Platform$Cmd$none","$elm$core$Array$bitMask","$elm$core$Elm$JsArray$unsafeGet","$elm$core$Array$getHelp","$elm$core$Array$tailIndex","$elm$core$Array$get","startShift","$author$project$Words$words","$author$project$State$hardcodedWordRepository","$elm$random$Random$peel","$elm$random$Random$int","seed0","lo","range","threshhold","seed","seedN","accountForBias","$elm$core$Array$length","$elm$random$Random$step","$author$project$State$randomWords","num","arrayPosition","nextWord","ai","maybeWord","ak","am","$elm$core$String$cons","$elm$core$String$fromChar","_char","$elm$core$Elm$JsArray$push","$elm$core$Elm$JsArray$singleton","$elm$core$Elm$JsArray$unsafeSet","$elm$core$Array$insertTailInTree","pos","newSub","$elm$core$Array$unsafeReplaceTail","newTail","originalTailLen","newTailLen","newArrayLen","newShift","newTree","$elm$core$Array$push","$author$project$State$updateCurrentTypedWords","keycode","fromCharCode","$author$project$State$arrayToString","$author$project$State$createWordWithUpdatedStatus","typedText","status","$author$project$State$resolveWordStatus","originalText","typedTextArray","$elm$core$Array$setHelp","$elm$core$Array$set","$elm$core$Elm$JsArray$appendN","$elm$core$Elm$JsArray$slice","$elm$core$Array$appendHelpBuilder","notAppended","appended","$elm$core$Array$appendHelpTree","toAppend","itemsToAppend","newArray","$elm$core$Elm$JsArray$foldl","$elm$core$Array$append","foldHelper","bTree","bTail","$elm$core$Array$branchFactor","$elm$core$String$append","$elm$json$Json$Encode$string","$author$project$Bounds$fetchBoundingClientRect","_Platform_outgoingPort","$author$project$State$update","randomWordsAndSeed","newModel","isNaN","keyCode","currentWordClass","$author$project$State$wrapModelInCmd","$author$project$State$verifyNewWordsNeeded","currentWord","updatedWord","$author$project$State$updateWordStatus","maybeBounds","lineChanged","$author$project$State$shouldScroll","bounds","currentYScroll","currentScroll","$elm$html$Html$Attributes$stringProperty","$elm$html$Html$Attributes$class","$elm$html$Html$div","$elm$html$Html$text","$elm$html$Html$a","$elm$core$List$filter","isGood","$elm$virtual_dom$VirtualDom$on","$elm$html$Html$Events$on","$elm$html$Html$p","$author$project$View$header","$author$project$View$approximateCPM","$elm$core$Array$filter","$elm$core$Array$foldl","$elm$core$Elm$JsArray$map","$elm$core$Array$map","$elm$core$Basics$round","$author$project$View$sanitize","Infinity","$author$project$View$approximateWPM","$elm$html$Html$Attributes$id","$elm$core$Elm$JsArray$indexedMap","$elm$core$Array$indexedMap","initialBuilder","mappedLeaf","$elm$html$Html$span","$elm$html$Html$Attributes$style","$author$project$View$spanForCurrentWord","typedChar","expectedChar","$elm$core$String$foldr","$author$project$View$currentWordProgress","currentTypedWords","currentWordArray","idx","$author$project$View$stylesheet","$author$project$View$timeLeft","$author$project$View$statusText","$author$project$View$wpm","$author$project$View$getWPM","$author$project$View$cpm","$author$project$View$getCPM","$author$project$View$stats","words","currentPosition","$author$project$View$getWordStyle","$author$project$View$wordsToHTML","$author$project$View$wordsBox","$author$project$View$getCurrentTypedWords","$author$project$View$currentTypedChars","Main","$author$project$Main$main","_Platform_mergeExportsProd","obj","this","app","entity","getBoundingClientRect","navigator","registration"],"mappings":"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","file":"static/js/main.51072866.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = $elm$core$Set$toList(x);\n\t\ty = $elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File !== 'undefined' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[36m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.ag.M === region.as.M)\n\t{\n\t\treturn 'on line ' + region.ag.M;\n\t}\n\treturn 'on lines ' + region.ag.M + ' through ' + region.as.M;\n}\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn !isNaN(word)\n\t\t? $elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: $elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? $elm$core$Maybe$Nothing\n\t\t: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn $elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? $elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn $elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? $elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? $elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!$elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif ($elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn $elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn $elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList === 'function' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.a3,\n\t\timpl.bc,\n\t\timpl.ba,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\t$elm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_enqueueEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_enqueueEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n//\n// Effects must be queued!\n//\n// Say your init contains a synchronous command, like Time.now or Time.here\n//\n//   - This will produce a batch of effects (FX_1)\n//   - The synchronous task triggers the subsequent `update` call\n//   - This will produce a batch of effects (FX_2)\n//\n// If we just start dispatching FX_2, subscriptions from FX_2 can be processed\n// before subscriptions from FX_1. No good! Earlier versions of this code had\n// this problem, leading to these reports:\n//\n//   https://github.com/elm/core/issues/980\n//   https://github.com/elm/core/pull/981\n//   https://github.com/elm/compiler/issues/1776\n//\n// The queue is necessary to avoid ordering issues for synchronous commands.\n\n\n// Why use true/false here? Why not just check the length of the queue?\n// The goal is to detect \"are we currently dispatching effects?\" If we\n// are, we need to bail and let the ongoing while loop handle things.\n//\n// Now say the queue has 1 element. When we dequeue the final element,\n// the queue will be empty, but we are still actively dispatching effects.\n// So you could get queue jumping in a really tricky category of cases.\n//\nvar _Platform_effectsQueue = [];\nvar _Platform_effectsActive = false;\n\n\nfunction _Platform_enqueueEffects(managers, cmdBag, subBag)\n{\n\t_Platform_effectsQueue.push({ p: managers, q: cmdBag, r: subBag });\n\n\tif (_Platform_effectsActive) return;\n\n\t_Platform_effectsActive = true;\n\tfor (var fx; fx = _Platform_effectsQueue.shift(); )\n\t{\n\t\t_Platform_dispatchEffects(fx.p, fx.q, fx.r);\n\t}\n\t_Platform_effectsActive = false;\n}\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\ts: bag.n,\n\t\t\t\tt: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.t)\n\t\t{\n\t\t\tx = temp.s(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tu: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].u;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tu: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].u;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\t$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2($elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3($elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\t$elm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tv: func(record.v),\n\t\tah: record.ah,\n\t\tad: record.ad\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.v;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.ah;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.ad) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.a3,\n\t\timpl.bc,\n\t\timpl.ba,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.bd;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.a3,\n\t\timpl.bc,\n\t\timpl.ba,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.af && impl.af(sendToApp)\n\t\t\tvar view = impl.bd;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.aT);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.bb) && (_VirtualDom_doc.title = title = doc.bb);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.a6;\n\tvar onUrlRequest = impl.a7;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\taf: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = $elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.aG === next.aG\n\t\t\t\t\t\t\t&& curr.aw === next.aw\n\t\t\t\t\t\t\t&& curr.aD.a === next.aD.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? $elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: $elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\ta3: function(flags)\n\t\t{\n\t\t\treturn A3(impl.a3, flags, _Browser_getUrl(), key);\n\t\t},\n\t\tbd: impl.bd,\n\t\tbc: impl.bc,\n\t\tba: impl.ba\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { a1: 'hidden', aU: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { a1: 'mozHidden', aU: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { a1: 'msHidden', aU: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { a1: 'webkitHidden', aU: 'webkitvisibilitychange' }\n\t\t: { a1: 'hidden', aU: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\taL: _Browser_getScene(),\n\t\taP: {\n\t\t\tan: _Browser_window.pageXOffset,\n\t\t\tao: _Browser_window.pageYOffset,\n\t\t\tal: _Browser_doc.documentElement.clientWidth,\n\t\t\tZ: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\tal: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tZ: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\taL: {\n\t\t\t\tal: node.scrollWidth,\n\t\t\t\tZ: node.scrollHeight\n\t\t\t},\n\t\t\taP: {\n\t\t\t\tan: node.scrollLeft,\n\t\t\t\tao: node.scrollTop,\n\t\t\t\tal: node.clientWidth,\n\t\t\t\tZ: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\taL: _Browser_getScene(),\n\t\t\taP: {\n\t\t\t\tan: x,\n\t\t\t\tao: y,\n\t\t\t\tal: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tZ: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\taY: {\n\t\t\t\tan: x + rect.left,\n\t\t\t\tao: y + rect.top,\n\t\t\t\tal: rect.width,\n\t\t\t\tZ: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\n\n\n\nfunction _Time_now(millisToPosix)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(millisToPosix(Date.now())));\n\t});\n}\n\nvar _Time_setInterval = F2(function(interval, task)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);\n\t\treturn function() { clearInterval(id); };\n\t});\n});\n\nfunction _Time_here()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(\n\t\t\tA2($elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)\n\t\t));\n\t});\n}\n\n\nfunction _Time_getZoneName()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar name = $elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tvar name = $elm$time$Time$Offset(new Date().getTimezoneOffset());\n\t\t}\n\t\tcallback(_Scheduler_succeed(name));\n\t});\n}\nvar $elm$core$Basics$EQ = 1;\nvar $elm$core$Basics$GT = 2;\nvar $elm$core$Basics$LT = 0;\nvar $elm$core$List$cons = _List_cons;\nvar $elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2($elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Set$toList = function (_v0) {\n\tvar dict = _v0;\n\treturn $elm$core$Dict$keys(dict);\n};\nvar $elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar $elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _v0) {\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\t$elm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar $elm$core$Array$toList = function (array) {\n\treturn A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);\n};\nvar $elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar $elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $elm$core$Basics$False = 1;\nvar $elm$core$Basics$add = _Basics_add;\nvar $elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Maybe$Nothing = {$: 1};\nvar $elm$core$String$all = _String_all;\nvar $elm$core$Basics$and = _Basics_and;\nvar $elm$core$Basics$append = _Utils_append;\nvar $elm$json$Json$Encode$encode = _Json_encode;\nvar $elm$core$String$fromInt = _String_fromNumber;\nvar $elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar $elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar $elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\t$elm$core$String$join,\n\t\t'\\n    ',\n\t\tA2($elm$core$String$split, '\\n', str));\n};\nvar $elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$length = function (xs) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_v0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar $elm$core$List$map2 = _List_map2;\nvar $elm$core$Basics$le = _Utils_le;\nvar $elm$core$Basics$sub = _Basics_sub;\nvar $elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2($elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar $elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$range,\n\t\t\t\t0,\n\t\t\t\t$elm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar $elm$core$Char$toCode = _Char_toCode;\nvar $elm$core$Char$isLower = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar $elm$core$Char$isUpper = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar $elm$core$Basics$or = _Basics_or;\nvar $elm$core$Char$isAlpha = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);\n};\nvar $elm$core$Char$isDigit = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar $elm$core$Char$isAlphaNum = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));\n};\nvar $elm$core$List$reverse = function (list) {\n\treturn A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);\n};\nvar $elm$core$String$uncons = _String_uncons;\nvar $elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(\n\t\t\t$elm$json$Json$Decode$errorToString(error))));\n\t});\nvar $elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar $elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _v1 = $elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\t\t\tvar _char = _v2.a;\n\t\t\t\t\t\t\tvar rest = _v2.b;\n\t\t\t\t\t\t\treturn $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + ($elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(\n\t\t\t\t\t\t\t\t$elm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t$elm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + ($elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2($elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$branchFactor = 32;\nvar $elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar $elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar $elm$core$Basics$ceiling = _Basics_ceiling;\nvar $elm$core$Basics$fdiv = _Basics_fdiv;\nvar $elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar $elm$core$Basics$toFloat = _Basics_toFloat;\nvar $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(\n\tA2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));\nvar $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);\nvar $elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar $elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$eq = _Utils_equal;\nvar $elm$core$Basics$floor = _Basics_floor;\nvar $elm$core$Elm$JsArray$length = _JsArray_length;\nvar $elm$core$Basics$gt = _Utils_gt;\nvar $elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar $elm$core$Basics$mul = _Basics_mul;\nvar $elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar $elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _v0.a;\n\t\t\tvar remainingNodes = _v0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn $elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Tuple$first = function (_v0) {\n\tvar x = _v0.a;\n\treturn x;\n};\nvar $elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.a) {\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.c),\n\t\t\t\t$elm$core$Array$shiftStep,\n\t\t\t\t$elm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.c);\n\t\t} else {\n\t\t\tvar treeLen = builder.a * $elm$core$Array$branchFactor;\n\t\t\tvar depth = $elm$core$Basics$floor(\n\t\t\t\tA2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.d) : builder.d;\n\t\t\tvar tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.a);\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.c) + treeLen,\n\t\t\t\tA2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.c);\n\t\t}\n\t});\nvar $elm$core$Basics$idiv = _Basics_idiv;\nvar $elm$core$Basics$lt = _Utils_lt;\nvar $elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{d: nodeList, a: (len / $elm$core$Array$branchFactor) | 0, c: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = $elm$core$Array$Leaf(\n\t\t\t\t\tA3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar $elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn $elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % $elm$core$Array$branchFactor;\n\t\t\tvar tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;\n\t\t\treturn A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar $elm$core$Basics$True = 0;\nvar $elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $elm$json$Json$Decode$map = _Json_map1;\nvar $elm$json$Json$Decode$map2 = _Json_map2;\nvar $elm$json$Json$Decode$succeed = _Json_succeed;\nvar $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar $elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar $elm$browser$Browser$Dom$NotFound = $elm$core$Basics$identity;\nvar $elm$url$Url$Http = 0;\nvar $elm$url$Url$Https = 1;\nvar $elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {au: fragment, aw: host, aB: path, aD: port_, aG: protocol, aH: query};\n\t});\nvar $elm$core$String$contains = _String_contains;\nvar $elm$core$String$length = _String_length;\nvar $elm$core$String$slice = _String_slice;\nvar $elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\t$elm$core$String$slice,\n\t\t\tn,\n\t\t\t$elm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar $elm$core$String$indexes = _String_indexes;\nvar $elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar $elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);\n\t});\nvar $elm$core$String$toInt = _String_toInt;\nvar $elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, ':', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\tvar i = _v0.a;\n\t\t\t\t\tvar _v1 = $elm$core$String$toInt(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _v1;\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\t$elm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2($elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '/', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2($elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '?', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\t$elm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '#', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$String$startsWith = _String_startsWith;\nvar $elm$url$Url$fromString = function (str) {\n\treturn A2($elm$core$String$startsWith, 'http://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);\n};\nvar $elm$core$Basics$never = function (_v0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _v0;\n\t\tvar $temp$_v0 = nvr;\n\t\t_v0 = $temp$_v0;\n\t\tcontinue never;\n\t}\n};\nvar $elm$core$Task$Perform = $elm$core$Basics$identity;\nvar $elm$core$Task$succeed = _Scheduler_succeed;\nvar $elm$core$Task$init = $elm$core$Task$succeed(0);\nvar $elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\t$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4($elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar $elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$core$Task$andThen = _Scheduler_andThen;\nvar $elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\t$elm$core$List$foldr,\n\t\t$elm$core$Task$map2($elm$core$List$cons),\n\t\t$elm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar $elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar $elm$core$Task$spawnCmd = F2(\n\tfunction (router, _v0) {\n\t\tvar task = _v0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t$elm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar $elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$map,\n\t\t\tfunction (_v0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\t$elm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar $elm$core$Task$onSelfMsg = F3(\n\tfunction (_v0, _v1, _v2) {\n\t\treturn $elm$core$Task$succeed(0);\n\t});\nvar $elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _v0) {\n\t\tvar task = _v0;\n\t\treturn A2($elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);\nvar $elm$core$Task$command = _Platform_leaf('Task');\nvar $elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn $elm$core$Task$command(\n\t\t\tA2($elm$core$Task$map, toMessage, task));\n\t});\nvar $elm$browser$Browser$element = _Browser_element;\nvar $author$project$Types$NotStarted = 1;\nvar $elm$core$Platform$Cmd$batch = _Platform_batch;\nvar $elm$core$Array$fromListHelp = F3(\n\tfunction (list, nodeList, nodeListSize) {\n\t\tfromListHelp:\n\t\twhile (true) {\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, list);\n\t\t\tvar jsArray = _v0.a;\n\t\t\tvar remainingItems = _v0.b;\n\t\t\tif (_Utils_cmp(\n\t\t\t\t$elm$core$Elm$JsArray$length(jsArray),\n\t\t\t\t$elm$core$Array$branchFactor) < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\ttrue,\n\t\t\t\t\t{d: nodeList, a: nodeListSize, c: jsArray});\n\t\t\t} else {\n\t\t\t\tvar $temp$list = remainingItems,\n\t\t\t\t\t$temp$nodeList = A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$elm$core$Array$Leaf(jsArray),\n\t\t\t\t\tnodeList),\n\t\t\t\t\t$temp$nodeListSize = nodeListSize + 1;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue fromListHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$fromList = function (list) {\n\tif (!list.b) {\n\t\treturn $elm$core$Array$empty;\n\t} else {\n\t\treturn A3($elm$core$Array$fromListHelp, list, _List_Nil, 0);\n\t}\n};\nvar $elm$random$Random$Seed = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar $elm$random$Random$next = function (_v0) {\n\tvar state0 = _v0.a;\n\tvar incr = _v0.b;\n\treturn A2($elm$random$Random$Seed, ((state0 * 1664525) + incr) >>> 0, incr);\n};\nvar $elm$random$Random$initialSeed = function (x) {\n\tvar _v0 = $elm$random$Random$next(\n\t\tA2($elm$random$Random$Seed, 0, 1013904223));\n\tvar state1 = _v0.a;\n\tvar incr = _v0.b;\n\tvar state2 = (state1 + x) >>> 0;\n\treturn $elm$random$Random$next(\n\t\tA2($elm$random$Random$Seed, state2, incr));\n};\nvar $author$project$Bounds$origin = {X: 0, Z: 0, _: 0, ae: 0, aj: 0, al: 0, an: 0, ao: 0};\nvar $author$project$Types$OnScrollFinished = {$: 5};\nvar $elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar $elm$core$Task$onError = _Scheduler_onError;\nvar $elm$core$Task$attempt = F2(\n\tfunction (resultToMessage, task) {\n\t\treturn $elm$core$Task$command(\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$onError,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Basics$composeL,\n\t\t\t\t\tA2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),\n\t\t\t\t\t$elm$core$Result$Err),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$composeL,\n\t\t\t\t\t\tA2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),\n\t\t\t\t\t\t$elm$core$Result$Ok),\n\t\t\t\t\ttask)));\n\t});\nvar $elm$browser$Browser$Dom$setViewportOf = _Browser_setViewportOf;\nvar $author$project$State$scrollY = function (y) {\n\treturn A2(\n\t\t$elm$core$Task$attempt,\n\t\tfunction (_v0) {\n\t\t\treturn $author$project$Types$OnScrollFinished;\n\t\t},\n\t\tA3($elm$browser$Browser$Dom$setViewportOf, 'typing', 0, y));\n};\nvar $author$project$Types$TimeForInitialSeed = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$time$Time$Name = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$time$Time$Offset = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$time$Time$Zone = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$time$Time$customZone = $elm$time$Time$Zone;\nvar $elm$time$Time$Posix = $elm$core$Basics$identity;\nvar $elm$time$Time$millisToPosix = $elm$core$Basics$identity;\nvar $elm$time$Time$now = _Time_now($elm$time$Time$millisToPosix);\nvar $author$project$State$timeForInitialSeed = A2($elm$core$Task$perform, $author$project$Types$TimeForInitialSeed, $elm$time$Time$now);\nvar $author$project$State$initialState = _Utils_Tuple2(\n\t{\n\t\tJ: 1,\n\t\tK: $author$project$Bounds$origin,\n\t\taV: 0,\n\t\ty: 0,\n\t\tT: $elm$random$Random$initialSeed(0),\n\t\tE: $elm$core$Array$fromList(_List_Nil),\n\t\taW: 0,\n\t\tu: $elm$core$Array$fromList(_List_Nil),\n\t\tL: 0,\n\t\taZ: _List_Nil,\n\t\tY: false,\n\t\tA: 0,\n\t\taa: 2,\n\t\taO: 30,\n\t\tW: 0\n\t},\n\t$elm$core$Platform$Cmd$batch(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$author$project$State$timeForInitialSeed,\n\t\t\t\t$author$project$State$scrollY(0)\n\t\t\t])));\nvar $author$project$Types$SetBoundingClientRect = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $author$project$Types$Tick = function (a) {\n\treturn {$: 6, a: a};\n};\nvar $elm$core$Platform$Sub$batch = _Platform_batch;\nvar $elm$time$Time$Every = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$time$Time$State = F2(\n\tfunction (taggers, processes) {\n\t\treturn {aF: processes, aN: taggers};\n\t});\nvar $elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;\nvar $elm$time$Time$init = $elm$core$Task$succeed(\n\tA2($elm$time$Time$State, $elm$core$Dict$empty, $elm$core$Dict$empty));\nvar $elm$core$Basics$compare = _Utils_compare;\nvar $elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _v1 = A2($elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_v1) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$Black = 1;\nvar $elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar $elm$core$Dict$Red = 0;\nvar $elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _v1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _v3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _v5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _v6 = left.d;\n\t\t\t\tvar _v7 = _v6.a;\n\t\t\t\tvar llK = _v6.b;\n\t\t\t\tvar llV = _v6.c;\n\t\t\t\tvar llLeft = _v6.d;\n\t\t\t\tvar llRight = _v6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _v1 = A2($elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_v1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_v0.$ === -1) && (!_v0.a)) {\n\t\t\tvar _v1 = _v0.a;\n\t\t\tvar k = _v0.b;\n\t\t\tvar v = _v0.c;\n\t\t\tvar l = _v0.d;\n\t\t\tvar r = _v0.e;\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _v0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar $elm$time$Time$addMySub = F2(\n\tfunction (_v0, state) {\n\t\tvar interval = _v0.a;\n\t\tvar tagger = _v0.b;\n\t\tvar _v1 = A2($elm$core$Dict$get, interval, state);\n\t\tif (_v1.$ === 1) {\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[tagger]),\n\t\t\t\tstate);\n\t\t} else {\n\t\t\tvar taggers = _v1.a;\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\tA2($elm$core$List$cons, tagger, taggers),\n\t\t\t\tstate);\n\t\t}\n\t});\nvar $elm$core$Process$kill = _Scheduler_kill;\nvar $elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _v0) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar list = _v0.a;\n\t\t\t\t\tvar result = _v0.b;\n\t\t\t\t\tif (!list.b) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v2 = list.a;\n\t\t\t\t\t\tvar lKey = _v2.a;\n\t\t\t\t\t\tvar lValue = _v2.b;\n\t\t\t\t\t\tvar rest = list.b;\n\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) < 0) {\n\t\t\t\t\t\t\tvar $temp$rKey = rKey,\n\t\t\t\t\t\t\t\t$temp$rValue = rValue,\n\t\t\t\t\t\t\t\t$temp$_v0 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tA3(leftStep, lKey, lValue, result));\n\t\t\t\t\t\t\trKey = $temp$rKey;\n\t\t\t\t\t\t\trValue = $temp$rValue;\n\t\t\t\t\t\t\t_v0 = $temp$_v0;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\t\tA4(bothStep, lKey, lValue, rValue, result));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _v3 = A3(\n\t\t\t$elm$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t_Utils_Tuple2(\n\t\t\t\t$elm$core$Dict$toList(leftDict),\n\t\t\t\tinitialResult),\n\t\t\trightDict);\n\t\tvar leftovers = _v3.a;\n\t\tvar intermediateResult = _v3.b;\n\t\treturn A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_v4, result) {\n\t\t\t\t\tvar k = _v4.a;\n\t\t\t\t\tvar v = _v4.b;\n\t\t\t\t\treturn A3(leftStep, k, v, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar $elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar $elm$time$Time$setInterval = _Time_setInterval;\nvar $elm$core$Process$spawn = _Scheduler_spawn;\nvar $elm$time$Time$spawnHelp = F3(\n\tfunction (router, intervals, processes) {\n\t\tif (!intervals.b) {\n\t\t\treturn $elm$core$Task$succeed(processes);\n\t\t} else {\n\t\t\tvar interval = intervals.a;\n\t\t\tvar rest = intervals.b;\n\t\t\tvar spawnTimer = $elm$core$Process$spawn(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$time$Time$setInterval,\n\t\t\t\t\tinterval,\n\t\t\t\t\tA2($elm$core$Platform$sendToSelf, router, interval)));\n\t\t\tvar spawnRest = function (id) {\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$time$Time$spawnHelp,\n\t\t\t\t\trouter,\n\t\t\t\t\trest,\n\t\t\t\t\tA3($elm$core$Dict$insert, interval, id, processes));\n\t\t\t};\n\t\t\treturn A2($elm$core$Task$andThen, spawnRest, spawnTimer);\n\t\t}\n\t});\nvar $elm$time$Time$onEffects = F3(\n\tfunction (router, subs, _v0) {\n\t\tvar processes = _v0.aF;\n\t\tvar rightStep = F3(\n\t\t\tfunction (_v6, id, _v7) {\n\t\t\t\tvar spawns = _v7.a;\n\t\t\t\tvar existing = _v7.b;\n\t\t\t\tvar kills = _v7.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\texisting,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\t\tfunction (_v5) {\n\t\t\t\t\t\t\treturn kills;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t$elm$core$Process$kill(id)));\n\t\t\t});\n\t\tvar newTaggers = A3($elm$core$List$foldl, $elm$time$Time$addMySub, $elm$core$Dict$empty, subs);\n\t\tvar leftStep = F3(\n\t\t\tfunction (interval, taggers, _v4) {\n\t\t\t\tvar spawns = _v4.a;\n\t\t\t\tvar existing = _v4.b;\n\t\t\t\tvar kills = _v4.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2($elm$core$List$cons, interval, spawns),\n\t\t\t\t\texisting,\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar bothStep = F4(\n\t\t\tfunction (interval, taggers, id, _v3) {\n\t\t\t\tvar spawns = _v3.a;\n\t\t\t\tvar existing = _v3.b;\n\t\t\t\tvar kills = _v3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\tA3($elm$core$Dict$insert, interval, id, existing),\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar _v1 = A6(\n\t\t\t$elm$core$Dict$merge,\n\t\t\tleftStep,\n\t\t\tbothStep,\n\t\t\trightStep,\n\t\t\tnewTaggers,\n\t\t\tprocesses,\n\t\t\t_Utils_Tuple3(\n\t\t\t\t_List_Nil,\n\t\t\t\t$elm$core$Dict$empty,\n\t\t\t\t$elm$core$Task$succeed(0)));\n\t\tvar spawnList = _v1.a;\n\t\tvar existingDict = _v1.b;\n\t\tvar killTask = _v1.c;\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (newProcesses) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tA2($elm$time$Time$State, newTaggers, newProcesses));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v2) {\n\t\t\t\t\treturn A3($elm$time$Time$spawnHelp, router, spawnList, existingDict);\n\t\t\t\t},\n\t\t\t\tkillTask));\n\t});\nvar $elm$time$Time$onSelfMsg = F3(\n\tfunction (router, interval, state) {\n\t\tvar _v0 = A2($elm$core$Dict$get, interval, state.aN);\n\t\tif (_v0.$ === 1) {\n\t\t\treturn $elm$core$Task$succeed(state);\n\t\t} else {\n\t\t\tvar taggers = _v0.a;\n\t\t\tvar tellTaggers = function (time) {\n\t\t\t\treturn $elm$core$Task$sequence(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tfunction (tagger) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$Platform$sendToApp,\n\t\t\t\t\t\t\t\trouter,\n\t\t\t\t\t\t\t\ttagger(time));\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttaggers));\n\t\t\t};\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v1) {\n\t\t\t\t\treturn $elm$core$Task$succeed(state);\n\t\t\t\t},\n\t\t\t\tA2($elm$core$Task$andThen, tellTaggers, $elm$time$Time$now));\n\t\t}\n\t});\nvar $elm$time$Time$subMap = F2(\n\tfunction (f, _v0) {\n\t\tvar interval = _v0.a;\n\t\tvar tagger = _v0.b;\n\t\treturn A2(\n\t\t\t$elm$time$Time$Every,\n\t\t\tinterval,\n\t\t\tA2($elm$core$Basics$composeL, f, tagger));\n\t});\n_Platform_effectManagers['Time'] = _Platform_createManager($elm$time$Time$init, $elm$time$Time$onEffects, $elm$time$Time$onSelfMsg, 0, $elm$time$Time$subMap);\nvar $elm$time$Time$subscription = _Platform_leaf('Time');\nvar $elm$time$Time$every = F2(\n\tfunction (interval, tagger) {\n\t\treturn $elm$time$Time$subscription(\n\t\t\tA2($elm$time$Time$Every, interval, tagger));\n\t});\nvar $author$project$Types$KeyTyped = function (a) {\n\treturn {$: 3, a: a};\n};\nvar $elm$json$Json$Decode$field = _Json_decodeField;\nvar $elm$json$Json$Decode$string = _Json_decodeString;\nvar $author$project$State$keyDecoder = A2(\n\t$elm$json$Json$Decode$map,\n\tfunction (value) {\n\t\treturn $author$project$Types$KeyTyped(value);\n\t},\n\tA2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string));\nvar $elm$core$Platform$Sub$none = $elm$core$Platform$Sub$batch(_List_Nil);\nvar $elm$browser$Browser$Events$Document = 0;\nvar $elm$browser$Browser$Events$MySub = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar $elm$browser$Browser$Events$State = F2(\n\tfunction (subs, pids) {\n\t\treturn {aC: pids, aM: subs};\n\t});\nvar $elm$browser$Browser$Events$init = $elm$core$Task$succeed(\n\tA2($elm$browser$Browser$Events$State, _List_Nil, $elm$core$Dict$empty));\nvar $elm$browser$Browser$Events$nodeToKey = function (node) {\n\tif (!node) {\n\t\treturn 'd_';\n\t} else {\n\t\treturn 'w_';\n\t}\n};\nvar $elm$browser$Browser$Events$addKey = function (sub) {\n\tvar node = sub.a;\n\tvar name = sub.b;\n\treturn _Utils_Tuple2(\n\t\t_Utils_ap(\n\t\t\t$elm$browser$Browser$Events$nodeToKey(node),\n\t\t\tname),\n\t\tsub);\n};\nvar $elm$core$Dict$fromList = function (assocs) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_v0, dict) {\n\t\t\t\tvar key = _v0.a;\n\t\t\t\tvar value = _v0.b;\n\t\t\t\treturn A3($elm$core$Dict$insert, key, value, dict);\n\t\t\t}),\n\t\t$elm$core$Dict$empty,\n\t\tassocs);\n};\nvar $elm$browser$Browser$Events$Event = F2(\n\tfunction (key, event) {\n\t\treturn {at: event, ax: key};\n\t});\nvar $elm$browser$Browser$Events$spawn = F3(\n\tfunction (router, key, _v0) {\n\t\tvar node = _v0.a;\n\t\tvar name = _v0.b;\n\t\tvar actualNode = function () {\n\t\t\tif (!node) {\n\t\t\t\treturn _Browser_doc;\n\t\t\t} else {\n\t\t\t\treturn _Browser_window;\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\t$elm$core$Task$map,\n\t\t\tfunction (value) {\n\t\t\t\treturn _Utils_Tuple2(key, value);\n\t\t\t},\n\t\t\tA3(\n\t\t\t\t_Browser_on,\n\t\t\t\tactualNode,\n\t\t\t\tname,\n\t\t\t\tfunction (event) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$Platform$sendToSelf,\n\t\t\t\t\t\trouter,\n\t\t\t\t\t\tA2($elm$browser$Browser$Events$Event, key, event));\n\t\t\t\t}));\n\t});\nvar $elm$core$Dict$union = F2(\n\tfunction (t1, t2) {\n\t\treturn A3($elm$core$Dict$foldl, $elm$core$Dict$insert, t2, t1);\n\t});\nvar $elm$browser$Browser$Events$onEffects = F3(\n\tfunction (router, subs, state) {\n\t\tvar stepRight = F3(\n\t\t\tfunction (key, sub, _v6) {\n\t\t\t\tvar deads = _v6.a;\n\t\t\t\tvar lives = _v6.b;\n\t\t\t\tvar news = _v6.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tlives,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tA3($elm$browser$Browser$Events$spawn, router, key, sub),\n\t\t\t\t\t\tnews));\n\t\t\t});\n\t\tvar stepLeft = F3(\n\t\t\tfunction (_v4, pid, _v5) {\n\t\t\t\tvar deads = _v5.a;\n\t\t\t\tvar lives = _v5.b;\n\t\t\t\tvar news = _v5.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2($elm$core$List$cons, pid, deads),\n\t\t\t\t\tlives,\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar stepBoth = F4(\n\t\t\tfunction (key, pid, _v2, _v3) {\n\t\t\t\tvar deads = _v3.a;\n\t\t\t\tvar lives = _v3.b;\n\t\t\t\tvar news = _v3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tA3($elm$core$Dict$insert, key, pid, lives),\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar newSubs = A2($elm$core$List$map, $elm$browser$Browser$Events$addKey, subs);\n\t\tvar _v0 = A6(\n\t\t\t$elm$core$Dict$merge,\n\t\t\tstepLeft,\n\t\t\tstepBoth,\n\t\t\tstepRight,\n\t\t\tstate.aC,\n\t\t\t$elm$core$Dict$fromList(newSubs),\n\t\t\t_Utils_Tuple3(_List_Nil, $elm$core$Dict$empty, _List_Nil));\n\t\tvar deadPids = _v0.a;\n\t\tvar livePids = _v0.b;\n\t\tvar makeNewPids = _v0.c;\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (pids) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$browser$Browser$Events$State,\n\t\t\t\t\t\tnewSubs,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Dict$union,\n\t\t\t\t\t\t\tlivePids,\n\t\t\t\t\t\t\t$elm$core$Dict$fromList(pids))));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v1) {\n\t\t\t\t\treturn $elm$core$Task$sequence(makeNewPids);\n\t\t\t\t},\n\t\t\t\t$elm$core$Task$sequence(\n\t\t\t\t\tA2($elm$core$List$map, $elm$core$Process$kill, deadPids))));\n\t});\nvar $elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _v0 = f(mx);\n\t\tif (!_v0.$) {\n\t\t\tvar x = _v0.a;\n\t\t\treturn A2($elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar $elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\t$elm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$browser$Browser$Events$onSelfMsg = F3(\n\tfunction (router, _v0, state) {\n\t\tvar key = _v0.ax;\n\t\tvar event = _v0.at;\n\t\tvar toMessage = function (_v2) {\n\t\t\tvar subKey = _v2.a;\n\t\t\tvar _v3 = _v2.b;\n\t\t\tvar node = _v3.a;\n\t\t\tvar name = _v3.b;\n\t\t\tvar decoder = _v3.c;\n\t\t\treturn _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : $elm$core$Maybe$Nothing;\n\t\t};\n\t\tvar messages = A2($elm$core$List$filterMap, toMessage, state.aM);\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (_v1) {\n\t\t\t\treturn $elm$core$Task$succeed(state);\n\t\t\t},\n\t\t\t$elm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$core$Platform$sendToApp(router),\n\t\t\t\t\tmessages)));\n\t});\nvar $elm$browser$Browser$Events$subMap = F2(\n\tfunction (func, _v0) {\n\t\tvar node = _v0.a;\n\t\tvar name = _v0.b;\n\t\tvar decoder = _v0.c;\n\t\treturn A3(\n\t\t\t$elm$browser$Browser$Events$MySub,\n\t\t\tnode,\n\t\t\tname,\n\t\t\tA2($elm$json$Json$Decode$map, func, decoder));\n\t});\n_Platform_effectManagers['Browser.Events'] = _Platform_createManager($elm$browser$Browser$Events$init, $elm$browser$Browser$Events$onEffects, $elm$browser$Browser$Events$onSelfMsg, 0, $elm$browser$Browser$Events$subMap);\nvar $elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');\nvar $elm$browser$Browser$Events$on = F3(\n\tfunction (node, name, decoder) {\n\t\treturn $elm$browser$Browser$Events$subscription(\n\t\t\tA3($elm$browser$Browser$Events$MySub, node, name, decoder));\n\t});\nvar $elm$browser$Browser$Events$onKeyPress = A2($elm$browser$Browser$Events$on, 0, 'keypress');\nvar $author$project$State$second = 1000;\nvar $elm$json$Json$Decode$andThen = _Json_andThen;\nvar $elm$json$Json$Decode$float = _Json_decodeFloat;\nvar $elm$json$Json$Decode$null = _Json_decodeNull;\nvar $elm$json$Json$Decode$oneOf = _Json_oneOf;\nvar $author$project$Bounds$setBoundingClientRect = _Platform_incomingPort(\n\t'setBoundingClientRect',\n\t$elm$json$Json$Decode$oneOf(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$json$Json$Decode$null($elm$core$Maybe$Nothing),\n\t\t\t\tA2(\n\t\t\t\t$elm$json$Json$Decode$map,\n\t\t\t\t$elm$core$Maybe$Just,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\tfunction (y) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\t\tfunction (width) {\n\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\t\t\t\tfunction (top) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfunction (right) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunction (left) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunction (height) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunction (bottom) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$json$Json$Decode$succeed(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{X: bottom, Z: height, _: left, ae: right, aj: top, al: width, an: x, ao: y});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'bottom', $elm$json$Json$Decode$float));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'height', $elm$json$Json$Decode$float));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'left', $elm$json$Json$Decode$float));\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'right', $elm$json$Json$Decode$float));\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'top', $elm$json$Json$Decode$float));\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'width', $elm$json$Json$Decode$float));\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'x', $elm$json$Json$Decode$float));\n\t\t\t\t\t},\n\t\t\t\t\tA2($elm$json$Json$Decode$field, 'y', $elm$json$Json$Decode$float)))\n\t\t\t])));\nvar $author$project$State$subscriptions = function (model) {\n\tvar _v0 = model.J;\n\tswitch (_v0) {\n\t\tcase 0:\n\t\t\treturn $elm$core$Platform$Sub$batch(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$browser$Browser$Events$onKeyPress($author$project$State$keyDecoder),\n\t\t\t\t\t\tA2($elm$time$Time$every, $author$project$State$second, $author$project$Types$Tick),\n\t\t\t\t\t\t$author$project$Bounds$setBoundingClientRect($author$project$Types$SetBoundingClientRect)\n\t\t\t\t\t]));\n\t\tcase 1:\n\t\t\treturn $elm$core$Platform$Sub$batch(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$browser$Browser$Events$onKeyPress($author$project$State$keyDecoder)\n\t\t\t\t\t]));\n\t\tdefault:\n\t\t\treturn $elm$core$Platform$Sub$none;\n\t}\n};\nvar $author$project$Types$Finished = 2;\nvar $author$project$Types$Started = 0;\nvar $elm$core$Basics$neq = _Utils_notEqual;\nvar $author$project$State$checkLineChanged = F2(\n\tfunction (previousViewport, currentViewport) {\n\t\tif (currentViewport.$ === 1) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tvar current = currentViewport.a;\n\t\t\treturn ((!_Utils_eq(previousViewport, $author$project$Bounds$origin)) && (_Utils_cmp(current.aj, previousViewport.aj) > 0)) ? true : false;\n\t\t}\n\t});\nvar $elm$core$Basics$ge = _Utils_ge;\nvar $elm$time$Time$posixToMillis = function (_v0) {\n\tvar millis = _v0;\n\treturn millis;\n};\nvar $author$project$State$initialSeedFromTime = function (time) {\n\treturn $elm$random$Random$initialSeed(\n\t\t$elm$time$Time$posixToMillis(time));\n};\nvar $author$project$State$initialWordNumber = 100;\nvar $author$project$State$lineHeight = 46;\nvar $author$project$State$lowerCaseZ = 122;\nvar $elm$core$Maybe$map = F2(\n\tfunction (f, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\tf(value));\n\t\t} else {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);\nvar $author$project$Types$Unevaluated = 0;\nvar $author$project$State$createWord = function (wordText) {\n\treturn {ai: wordText, ak: '', am: 0};\n};\nvar $author$project$State$extractText = function (maybeWord) {\n\tif (!maybeWord.$) {\n\t\tvar w = maybeWord.a;\n\t\treturn w;\n\t} else {\n\t\treturn '';\n\t}\n};\nvar $elm$core$Bitwise$and = _Bitwise_and;\nvar $elm$core$Array$bitMask = 4294967295 >>> (32 - $elm$core$Array$shiftStep);\nvar $elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;\nvar $elm$core$Array$getHelp = F3(\n\tfunction (shift, index, tree) {\n\t\tgetHelp:\n\t\twhile (true) {\n\t\t\tvar pos = $elm$core$Array$bitMask & (index >>> shift);\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!_v0.$) {\n\t\t\t\tvar subTree = _v0.a;\n\t\t\t\tvar $temp$shift = shift - $elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$index = index,\n\t\t\t\t\t$temp$tree = subTree;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tindex = $temp$index;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue getHelp;\n\t\t\t} else {\n\t\t\t\tvar values = _v0.a;\n\t\t\t\treturn A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, values);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;\nvar $elm$core$Array$tailIndex = function (len) {\n\treturn (len >>> 5) << 5;\n};\nvar $elm$core$Array$get = F2(\n\tfunction (index, _v0) {\n\t\tvar len = _v0.a;\n\t\tvar startShift = _v0.b;\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? $elm$core$Maybe$Nothing : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\t$elm$core$Array$tailIndex(len)) > -1) ? $elm$core$Maybe$Just(\n\t\t\tA2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, tail)) : $elm$core$Maybe$Just(\n\t\t\tA3($elm$core$Array$getHelp, startShift, index, tree)));\n\t});\nvar $author$project$Words$words = _List_fromArray(\n\t['open', 'seem', 'together', 'next', 'white', 'children', 'begin', 'got', 'walk', 'example', 'ease', 'paper', 'group', 'always', 'music', 'those', 'both', 'mark', 'often', 'letter', 'until', 'mile', 'river', 'car', 'feet', 'care', 'second', 'book', 'carry', 'took', 'science', 'eat', 'room', 'friend', 'began', 'idea', 'fish', 'mountain', 'stop', 'once', 'base', 'hear', 'horse', 'cut', 'sure', 'watch', 'color', 'face', 'wood', 'main', 'enough', 'plain', 'girl', 'usual', 'young', 'ready', 'above', 'ever', 'red', 'list', 'though', 'feel', 'talk', 'bird', 'soon', 'body', 'dog', 'family', 'direct', 'pose', 'leave', 'song', 'measure', 'door', 'product', 'black', 'short', 'numeral', 'class', 'wind', 'question', 'happen', 'complete', 'ship', 'area', 'half', 'rock', 'order', 'fire', 'south', 'problem', 'piece', 'told', 'knew', 'pass', 'since', 'top', 'whole', 'king', 'space', 'heard', 'best', 'hour', 'better', 'true', 'during', 'hundred', 'five', 'remember', 'step', 'early', 'hold', 'west', 'ground', 'interest', 'reach', 'fast', 'verb', 'sing', 'listen', 'six', 'table', 'travel', 'less', 'morning', 'ten', 'simple', 'several', 'vowel', 'toward', 'war', 'lay', 'against', 'pattern', 'slow', 'center', 'love', 'person', 'money', 'serve', 'appear', 'road', 'map', 'rain', 'rule', 'govern', 'pull', 'cold', 'notice', 'voice', 'unit', 'power', 'town', 'fine', 'certain', 'fly', 'fall', 'lead', 'cry', 'dark', 'machine', 'note', 'wait', 'plan', 'figure', 'star', 'box', 'noun', 'field', 'rest', 'correct', 'able', 'pound', 'done', 'beauty', 'drive', 'stood', 'contain', 'front', 'teach', 'week', 'final', 'gave', 'green', 'oh', 'quick', 'develop', 'ocean', 'warm', 'free', 'minute', 'strong', 'special', 'mind', 'behind', 'clear', 'tail', 'produce', 'fact', 'street', 'inch', 'multiply', 'nothing', 'course', 'stay', 'wheel', 'full', 'force', 'blue', 'object', 'decide', 'surface', 'deep', 'moon', 'island', 'foot', 'system', 'busy', 'test', 'record', 'boat', 'common', 'gold', 'possible', 'plane', 'stead', 'dry', 'wonder', 'laugh', 'thousand', 'ago', 'ran', 'check', 'game', 'shape', 'equate', 'hot', 'miss', 'brought', 'heat', 'snow', 'tire', 'bring', 'yes', 'distant', 'fill', 'east', 'paint', 'language', 'among', 'grand', 'ball', 'yet', 'wave', 'drop', 'heart', 'am', 'present', 'heavy', 'dance', 'engine', 'position', 'arm', 'wide', 'sail', 'material', 'size', 'vary', 'settle', 'speak', 'weight', 'general', 'ice', 'matter', 'circle', 'pair', 'include', 'divide', 'syllable', 'felt', 'perhaps', 'pick', 'sudden', 'count', 'square', 'reason', 'length', 'represent', 'art', 'subject', 'region', 'energy', 'hunt', 'probable', 'bed', 'brother', 'egg', 'ride', 'cell', 'believe', 'fraction', 'forest', 'sit', 'race', 'window', 'store', 'summer', 'train', 'sleep', 'prove', 'lone', 'leg', 'exercise', 'wall', 'catch', 'mount', 'wish', 'sky', 'board', 'joy', 'winter', 'sat', 'written', 'wild', 'instrument', 'kept', 'glass', 'grass', 'cow', 'job', 'edge', 'sign', 'visit', 'past', 'soft', 'fun', 'bright', 'gas', 'weather', 'month', 'million', 'bear', 'finish', 'happy', 'hope', 'flower', 'clothe', 'strange', 'gone', 'jump', 'baby', 'eight', 'village', 'meet', 'root', 'buy', 'raise', 'solve', 'metal', 'whether', 'push', 'seven', 'paragraph', 'third', 'shall', 'held', 'hair', 'describe', 'cook', 'floor', 'either', 'result', 'burn', 'hill', 'safe', 'cat', 'century', 'consider', 'type', 'law', 'bit', 'coast', 'copy', 'phrase', 'silent', 'tall', 'sand', 'soil', 'roll', 'temperature', 'finger', 'industry', 'value', 'fight', 'lie', 'beat', 'excite', 'natural', 'view', 'sense', 'ear', 'else', 'quite', 'broke', 'case', 'middle', 'kill', 'son', 'lake', 'moment', 'scale', 'loud', 'spring', 'observe', 'child', 'straight', 'consonant', 'nation', 'dictionary', 'milk', 'speed', 'method', 'organ', 'pay', 'age', 'section', 'dress', 'cloud', 'surprise', 'quiet', 'stone', 'tiny', 'climb', 'cool', 'design', 'poor', 'lot', 'experiment', 'bottom', 'key', 'iron', 'single', 'stick', 'flat', 'twenty', 'skin', 'smile', 'crease', 'hole', 'trade', 'melody', 'trip', 'office', 'receive', 'row', 'mouth', 'exact', 'symbol', 'die', 'least', 'trouble', 'shout', 'except', 'wrote', 'seed', 'tone', 'join', 'suggest', 'clean', 'break', 'lady', 'yard', 'rise', 'bad', 'blow', 'oil', 'blood', 'touch', 'grew', 'cent', 'mix', 'team', 'wire', 'cost', 'lost', 'brown', 'wear', 'garden', 'equal', 'sent', 'choose', 'fell', 'fit', 'flow', 'fair', 'bank', 'collect', 'save', 'control', 'decimal']);\nvar $author$project$State$hardcodedWordRepository = $elm$core$Array$fromList($author$project$Words$words);\nvar $elm$random$Random$Generator = $elm$core$Basics$identity;\nvar $elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar $elm$core$Bitwise$xor = _Bitwise_xor;\nvar $elm$random$Random$peel = function (_v0) {\n\tvar state = _v0.a;\n\tvar word = (state ^ (state >>> ((state >>> 28) + 4))) * 277803737;\n\treturn ((word >>> 22) ^ word) >>> 0;\n};\nvar $elm$random$Random$int = F2(\n\tfunction (a, b) {\n\t\treturn function (seed0) {\n\t\t\tvar _v0 = (_Utils_cmp(a, b) < 0) ? _Utils_Tuple2(a, b) : _Utils_Tuple2(b, a);\n\t\t\tvar lo = _v0.a;\n\t\t\tvar hi = _v0.b;\n\t\t\tvar range = (hi - lo) + 1;\n\t\t\tif (!((range - 1) & range)) {\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t(((range - 1) & $elm$random$Random$peel(seed0)) >>> 0) + lo,\n\t\t\t\t\t$elm$random$Random$next(seed0));\n\t\t\t} else {\n\t\t\t\tvar threshhold = (((-range) >>> 0) % range) >>> 0;\n\t\t\t\tvar accountForBias = function (seed) {\n\t\t\t\t\taccountForBias:\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tvar x = $elm$random$Random$peel(seed);\n\t\t\t\t\t\tvar seedN = $elm$random$Random$next(seed);\n\t\t\t\t\t\tif (_Utils_cmp(x, threshhold) < 0) {\n\t\t\t\t\t\t\tvar $temp$seed = seedN;\n\t\t\t\t\t\t\tseed = $temp$seed;\n\t\t\t\t\t\t\tcontinue accountForBias;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn _Utils_Tuple2((x % range) + lo, seedN);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn accountForBias(seed0);\n\t\t\t}\n\t\t};\n\t});\nvar $elm$core$Array$length = function (_v0) {\n\tvar len = _v0.a;\n\treturn len;\n};\nvar $elm$core$Tuple$second = function (_v0) {\n\tvar y = _v0.b;\n\treturn y;\n};\nvar $elm$random$Random$step = F2(\n\tfunction (_v0, seed) {\n\t\tvar generator = _v0;\n\t\treturn generator(seed);\n\t});\nvar $author$project$State$randomWords = F3(\n\tfunction (num, seed, acc) {\n\t\trandomWords:\n\t\twhile (true) {\n\t\t\tvar arrayPosition = A2(\n\t\t\t\t$elm$random$Random$step,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$random$Random$int,\n\t\t\t\t\t0,\n\t\t\t\t\t$elm$core$Array$length($author$project$State$hardcodedWordRepository) - 1),\n\t\t\t\tseed);\n\t\t\tvar nextWord = $author$project$State$createWord(\n\t\t\t\t$author$project$State$extractText(\n\t\t\t\t\tA2($elm$core$Array$get, arrayPosition.a, $author$project$State$hardcodedWordRepository)));\n\t\t\tif (_Utils_eq(\n\t\t\t\t$elm$core$List$length(acc),\n\t\t\t\tnum)) {\n\t\t\t\treturn _Utils_Tuple2(acc, arrayPosition.b);\n\t\t\t} else {\n\t\t\t\tvar $temp$num = num,\n\t\t\t\t\t$temp$seed = arrayPosition.b,\n\t\t\t\t\t$temp$acc = _Utils_ap(\n\t\t\t\t\tacc,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[nextWord]));\n\t\t\t\tnum = $temp$num;\n\t\t\t\tseed = $temp$seed;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue randomWords;\n\t\t\t}\n\t\t}\n\t});\nvar $author$project$State$shouldScroll = function (model) {\n\treturn (_Utils_cmp(model.A, model.aa) > -1) ? true : false;\n};\nvar $author$project$State$spaceKey = 32;\nvar $elm$core$String$cons = _String_cons;\nvar $elm$core$String$fromChar = function (_char) {\n\treturn A2($elm$core$String$cons, _char, '');\n};\nvar $elm$core$Char$fromCode = _Char_fromCode;\nvar $elm$core$Elm$JsArray$push = _JsArray_push;\nvar $elm$core$Elm$JsArray$singleton = _JsArray_singleton;\nvar $elm$core$Elm$JsArray$unsafeSet = _JsArray_unsafeSet;\nvar $elm$core$Array$insertTailInTree = F4(\n\tfunction (shift, index, tail, tree) {\n\t\tvar pos = $elm$core$Array$bitMask & (index >>> shift);\n\t\tif (_Utils_cmp(\n\t\t\tpos,\n\t\t\t$elm$core$Elm$JsArray$length(tree)) > -1) {\n\t\t\tif (shift === 5) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Elm$JsArray$push,\n\t\t\t\t\t$elm$core$Array$Leaf(tail),\n\t\t\t\t\ttree);\n\t\t\t} else {\n\t\t\t\tvar newSub = $elm$core$Array$SubTree(\n\t\t\t\t\tA4($elm$core$Array$insertTailInTree, shift - $elm$core$Array$shiftStep, index, tail, $elm$core$Elm$JsArray$empty));\n\t\t\t\treturn A2($elm$core$Elm$JsArray$push, newSub, tree);\n\t\t\t}\n\t\t} else {\n\t\t\tvar value = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!value.$) {\n\t\t\t\tvar subTree = value.a;\n\t\t\t\tvar newSub = $elm$core$Array$SubTree(\n\t\t\t\t\tA4($elm$core$Array$insertTailInTree, shift - $elm$core$Array$shiftStep, index, tail, subTree));\n\t\t\t\treturn A3($elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);\n\t\t\t} else {\n\t\t\t\tvar newSub = $elm$core$Array$SubTree(\n\t\t\t\t\tA4(\n\t\t\t\t\t\t$elm$core$Array$insertTailInTree,\n\t\t\t\t\t\tshift - $elm$core$Array$shiftStep,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\ttail,\n\t\t\t\t\t\t$elm$core$Elm$JsArray$singleton(value)));\n\t\t\t\treturn A3($elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$unsafeReplaceTail = F2(\n\tfunction (newTail, _v0) {\n\t\tvar len = _v0.a;\n\t\tvar startShift = _v0.b;\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\tvar originalTailLen = $elm$core$Elm$JsArray$length(tail);\n\t\tvar newTailLen = $elm$core$Elm$JsArray$length(newTail);\n\t\tvar newArrayLen = len + (newTailLen - originalTailLen);\n\t\tif (_Utils_eq(newTailLen, $elm$core$Array$branchFactor)) {\n\t\t\tvar overflow = _Utils_cmp(newArrayLen >>> $elm$core$Array$shiftStep, 1 << startShift) > 0;\n\t\t\tif (overflow) {\n\t\t\t\tvar newShift = startShift + $elm$core$Array$shiftStep;\n\t\t\t\tvar newTree = A4(\n\t\t\t\t\t$elm$core$Array$insertTailInTree,\n\t\t\t\t\tnewShift,\n\t\t\t\t\tlen,\n\t\t\t\t\tnewTail,\n\t\t\t\t\t$elm$core$Elm$JsArray$singleton(\n\t\t\t\t\t\t$elm$core$Array$SubTree(tree)));\n\t\t\t\treturn A4($elm$core$Array$Array_elm_builtin, newArrayLen, newShift, newTree, $elm$core$Elm$JsArray$empty);\n\t\t\t} else {\n\t\t\t\treturn A4(\n\t\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t\tnewArrayLen,\n\t\t\t\t\tstartShift,\n\t\t\t\t\tA4($elm$core$Array$insertTailInTree, startShift, len, newTail, tree),\n\t\t\t\t\t$elm$core$Elm$JsArray$empty);\n\t\t\t}\n\t\t} else {\n\t\t\treturn A4($elm$core$Array$Array_elm_builtin, newArrayLen, startShift, tree, newTail);\n\t\t}\n\t});\nvar $elm$core$Array$push = F2(\n\tfunction (a, array) {\n\t\tvar tail = array.d;\n\t\treturn A2(\n\t\t\t$elm$core$Array$unsafeReplaceTail,\n\t\t\tA2($elm$core$Elm$JsArray$push, a, tail),\n\t\t\tarray);\n\t});\nvar $author$project$State$updateCurrentTypedWords = F2(\n\tfunction (keycode, model) {\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\tE: A2(\n\t\t\t\t\t\t$elm$core$Array$push,\n\t\t\t\t\t\t$elm$core$String$fromChar(\n\t\t\t\t\t\t\t$elm$core$Char$fromCode(keycode)),\n\t\t\t\t\t\tmodel.E)\n\t\t\t\t}),\n\t\t\t$elm$core$Platform$Cmd$none);\n\t});\nvar $author$project$State$arrayToString = function (array) {\n\treturn A3($elm$core$Array$foldr, $elm$core$Basics$append, '', array);\n};\nvar $author$project$State$createWordWithUpdatedStatus = F3(\n\tfunction (word, typedText, status) {\n\t\treturn _Utils_update(\n\t\t\tword,\n\t\t\t{\n\t\t\t\tak: $author$project$State$arrayToString(typedText),\n\t\t\t\tam: status\n\t\t\t});\n\t});\nvar $author$project$State$extractWord = function (maybeWord) {\n\tif (!maybeWord.$) {\n\t\tvar word = maybeWord.a;\n\t\treturn word;\n\t} else {\n\t\treturn {ai: '', ak: '', am: 0};\n\t}\n};\nvar $author$project$Types$TypedCorrectly = 1;\nvar $author$project$Types$TypedIncorrectly = 2;\nvar $author$project$State$resolveWordStatus = F2(\n\tfunction (originalText, typedTextArray) {\n\t\tvar typedTextString = $author$project$State$arrayToString(typedTextArray);\n\t\treturn _Utils_eq(originalText, typedTextString) ? 1 : 2;\n\t});\nvar $elm$core$Array$setHelp = F4(\n\tfunction (shift, index, value, tree) {\n\t\tvar pos = $elm$core$Array$bitMask & (index >>> shift);\n\t\tvar _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\tif (!_v0.$) {\n\t\t\tvar subTree = _v0.a;\n\t\t\tvar newSub = A4($elm$core$Array$setHelp, shift - $elm$core$Array$shiftStep, index, value, subTree);\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\t$elm$core$Array$SubTree(newSub),\n\t\t\t\ttree);\n\t\t} else {\n\t\t\tvar values = _v0.a;\n\t\t\tvar newLeaf = A3($elm$core$Elm$JsArray$unsafeSet, $elm$core$Array$bitMask & index, value, values);\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\t$elm$core$Array$Leaf(newLeaf),\n\t\t\t\ttree);\n\t\t}\n\t});\nvar $elm$core$Array$set = F3(\n\tfunction (index, value, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? array : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\t$elm$core$Array$tailIndex(len)) > -1) ? A4(\n\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\ttree,\n\t\t\tA3($elm$core$Elm$JsArray$unsafeSet, $elm$core$Array$bitMask & index, value, tail)) : A4(\n\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\tA4($elm$core$Array$setHelp, startShift, index, value, tree),\n\t\t\ttail));\n\t});\nvar $author$project$State$updateWordStatus = function (model) {\n\tvar currentWord = $author$project$State$extractWord(\n\t\tA2($elm$core$Array$get, model.y, model.u));\n\tvar currentWordStatus = A2($author$project$State$resolveWordStatus, currentWord.ai, model.E);\n\tvar updatedWord = A3($author$project$State$createWordWithUpdatedStatus, currentWord, model.E, currentWordStatus);\n\treturn _Utils_update(\n\t\tmodel,\n\t\t{\n\t\t\ty: model.y + 1,\n\t\t\tE: $elm$core$Array$fromList(_List_Nil),\n\t\t\tu: A3($elm$core$Array$set, model.y, updatedWord, model.u)\n\t\t});\n};\nvar $author$project$State$upperCaseA = 65;\nvar $elm$core$Elm$JsArray$appendN = _JsArray_appendN;\nvar $elm$core$Elm$JsArray$slice = _JsArray_slice;\nvar $elm$core$Array$appendHelpBuilder = F2(\n\tfunction (tail, builder) {\n\t\tvar tailLen = $elm$core$Elm$JsArray$length(tail);\n\t\tvar notAppended = ($elm$core$Array$branchFactor - $elm$core$Elm$JsArray$length(builder.c)) - tailLen;\n\t\tvar appended = A3($elm$core$Elm$JsArray$appendN, $elm$core$Array$branchFactor, builder.c, tail);\n\t\treturn (notAppended < 0) ? {\n\t\t\td: A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$core$Array$Leaf(appended),\n\t\t\t\tbuilder.d),\n\t\t\ta: builder.a + 1,\n\t\t\tc: A3($elm$core$Elm$JsArray$slice, notAppended, tailLen, tail)\n\t\t} : ((!notAppended) ? {\n\t\t\td: A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$core$Array$Leaf(appended),\n\t\t\t\tbuilder.d),\n\t\t\ta: builder.a + 1,\n\t\t\tc: $elm$core$Elm$JsArray$empty\n\t\t} : {d: builder.d, a: builder.a, c: appended});\n\t});\nvar $elm$core$Array$appendHelpTree = F2(\n\tfunction (toAppend, array) {\n\t\tvar len = array.a;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tvar itemsToAppend = $elm$core$Elm$JsArray$length(toAppend);\n\t\tvar notAppended = ($elm$core$Array$branchFactor - $elm$core$Elm$JsArray$length(tail)) - itemsToAppend;\n\t\tvar appended = A3($elm$core$Elm$JsArray$appendN, $elm$core$Array$branchFactor, tail, toAppend);\n\t\tvar newArray = A2($elm$core$Array$unsafeReplaceTail, appended, array);\n\t\tif (notAppended < 0) {\n\t\t\tvar nextTail = A3($elm$core$Elm$JsArray$slice, notAppended, itemsToAppend, toAppend);\n\t\t\treturn A2($elm$core$Array$unsafeReplaceTail, nextTail, newArray);\n\t\t} else {\n\t\t\treturn newArray;\n\t\t}\n\t});\nvar $elm$core$Elm$JsArray$foldl = _JsArray_foldl;\nvar $elm$core$Array$builderFromArray = function (_v0) {\n\tvar len = _v0.a;\n\tvar tree = _v0.c;\n\tvar tail = _v0.d;\n\tvar helper = F2(\n\t\tfunction (node, acc) {\n\t\t\tif (!node.$) {\n\t\t\t\tvar subTree = node.a;\n\t\t\t\treturn A3($elm$core$Elm$JsArray$foldl, helper, acc, subTree);\n\t\t\t} else {\n\t\t\t\treturn A2($elm$core$List$cons, node, acc);\n\t\t\t}\n\t\t});\n\treturn {\n\t\td: A3($elm$core$Elm$JsArray$foldl, helper, _List_Nil, tree),\n\t\ta: (len / $elm$core$Array$branchFactor) | 0,\n\t\tc: tail\n\t};\n};\nvar $elm$core$Array$append = F2(\n\tfunction (a, _v0) {\n\t\tvar aTail = a.d;\n\t\tvar bLen = _v0.a;\n\t\tvar bTree = _v0.c;\n\t\tvar bTail = _v0.d;\n\t\tif (_Utils_cmp(bLen, $elm$core$Array$branchFactor * 4) < 1) {\n\t\t\tvar foldHelper = F2(\n\t\t\t\tfunction (node, array) {\n\t\t\t\t\tif (!node.$) {\n\t\t\t\t\t\tvar tree = node.a;\n\t\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldl, foldHelper, array, tree);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\t\treturn A2($elm$core$Array$appendHelpTree, leaf, array);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Array$appendHelpTree,\n\t\t\t\tbTail,\n\t\t\t\tA3($elm$core$Elm$JsArray$foldl, foldHelper, a, bTree));\n\t\t} else {\n\t\t\tvar foldHelper = F2(\n\t\t\t\tfunction (node, builder) {\n\t\t\t\t\tif (!node.$) {\n\t\t\t\t\t\tvar tree = node.a;\n\t\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldl, foldHelper, builder, tree);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\t\treturn A2($elm$core$Array$appendHelpBuilder, leaf, builder);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\ttrue,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Array$appendHelpBuilder,\n\t\t\t\t\tbTail,\n\t\t\t\t\tA3(\n\t\t\t\t\t\t$elm$core$Elm$JsArray$foldl,\n\t\t\t\t\t\tfoldHelper,\n\t\t\t\t\t\t$elm$core$Array$builderFromArray(a),\n\t\t\t\t\t\tbTree)));\n\t\t}\n\t});\nvar $author$project$State$verifyNewWordsNeeded = function (model) {\n\tvar remainingWordsToEvaluate = $elm$core$Array$length(model.u) - (model.y + 1);\n\tif (!remainingWordsToEvaluate) {\n\t\tvar randomWordsAndSeed = A3($author$project$State$randomWords, $author$project$State$initialWordNumber, model.T, _List_Nil);\n\t\tvar resultingSeed = randomWordsAndSeed.b;\n\t\tvar wordList = randomWordsAndSeed.a;\n\t\treturn _Utils_update(\n\t\t\tmodel,\n\t\t\t{\n\t\t\t\tT: resultingSeed,\n\t\t\t\tu: A2(\n\t\t\t\t\t$elm$core$Array$append,\n\t\t\t\t\tmodel.u,\n\t\t\t\t\t$elm$core$Array$fromList(wordList))\n\t\t\t});\n\t} else {\n\t\treturn model;\n\t}\n};\nvar $elm$core$String$append = _String_append;\nvar $elm$json$Json$Encode$string = _Json_wrap;\nvar $author$project$Bounds$fetchBoundingClientRect = _Platform_outgoingPort('fetchBoundingClientRect', $elm$json$Json$Encode$string);\nvar $author$project$State$getBoundsTask = function (id) {\n\treturn $author$project$Bounds$fetchBoundingClientRect(id);\n};\nvar $author$project$State$wrapModelInCmd = function (model) {\n\tvar currentWordClass = A2(\n\t\t$elm$core$String$append,\n\t\t'word-',\n\t\t$elm$core$String$fromInt(model.y));\n\treturn _Utils_Tuple2(\n\t\tmodel,\n\t\t$author$project$State$getBoundsTask(currentWordClass));\n};\nvar $author$project$State$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 0:\n\t\t\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t\t\tcase 1:\n\t\t\t\tvar time = msg.a;\n\t\t\t\tvar randomWordsAndSeed = A3(\n\t\t\t\t\t$author$project$State$randomWords,\n\t\t\t\t\t$author$project$State$initialWordNumber,\n\t\t\t\t\t$author$project$State$initialSeedFromTime(time),\n\t\t\t\t\t_List_Nil);\n\t\t\t\tvar resultingSeed = randomWordsAndSeed.b;\n\t\t\t\tvar wordList = randomWordsAndSeed.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tT: resultingSeed,\n\t\t\t\t\t\t\tu: $elm$core$Array$fromList(wordList)\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 3:\n\t\t\t\tvar key = msg.a;\n\t\t\t\tvar newModel = _Utils_update(\n\t\t\t\t\tmodel,\n\t\t\t\t\t{J: 0});\n\t\t\t\tvar code = A2(\n\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t$elm$core$Char$toCode,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\treturn x.a;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t$elm$core$String$uncons(key)));\n\t\t\t\tif (code.$ === 1) {\n\t\t\t\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t\t\t\t} else {\n\t\t\t\t\tvar keyCode = code.a;\n\t\t\t\t\treturn ((_Utils_cmp(keyCode, $author$project$State$upperCaseA) > -1) && (_Utils_cmp(keyCode, $author$project$State$lowerCaseZ) < 1)) ? A2($author$project$State$updateCurrentTypedWords, keyCode, newModel) : (_Utils_eq(keyCode, $author$project$State$spaceKey) ? $author$project$State$wrapModelInCmd(\n\t\t\t\t\t\t$author$project$State$verifyNewWordsNeeded(\n\t\t\t\t\t\t\t$author$project$State$updateWordStatus(newModel))) : _Utils_Tuple2(model, $elm$core$Platform$Cmd$none));\n\t\t\t\t}\n\t\t\tcase 2:\n\t\t\t\tvar maybeBounds = msg.a;\n\t\t\t\tvar lineChanged = A2($author$project$State$checkLineChanged, model.K, maybeBounds);\n\t\t\t\tvar newModel = function () {\n\t\t\t\t\tif (maybeBounds.$ === 1) {\n\t\t\t\t\t\treturn model;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar bounds = maybeBounds.a;\n\t\t\t\t\t\treturn lineChanged ? ((!model.Y) ? _Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{K: bounds, Y: true, A: model.A + 1}) : _Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{K: bounds, A: model.A + 1, aa: 1})) : _Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{K: bounds});\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\tif ($author$project$State$shouldScroll(newModel)) {\n\t\t\t\t\tvar currentYScroll = model.L + $author$project$State$lineHeight;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t{L: currentYScroll, A: 0}),\n\t\t\t\t\t\t$author$project$State$scrollY(currentYScroll));\n\t\t\t\t} else {\n\t\t\t\t\treturn _Utils_Tuple2(newModel, $elm$core$Platform$Cmd$none);\n\t\t\t\t}\n\t\t\tcase 4:\n\t\t\t\tvar currentScroll = model.L + $author$project$State$lineHeight;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{L: currentScroll}),\n\t\t\t\t\t$author$project$State$scrollY(currentScroll));\n\t\t\tcase 5:\n\t\t\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t\t\tcase 6:\n\t\t\t\tvar time = msg.a;\n\t\t\t\treturn (_Utils_cmp(model.W + 1, model.aO) > -1) ? _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{J: 2}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none) : _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{W: model.W + 1}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 7:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{J: 0}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tdefault:\n\t\t\t\treturn $author$project$State$initialState;\n\t\t}\n\t});\nvar $elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\t$elm$json$Json$Encode$string(string));\n\t});\nvar $elm$html$Html$Attributes$class = $elm$html$Html$Attributes$stringProperty('className');\nvar $elm$html$Html$div = _VirtualDom_node('div');\nvar $author$project$View$arrayToString = function (array) {\n\treturn A3($elm$core$Array$foldr, $elm$core$Basics$append, '', array);\n};\nvar $author$project$View$getCurrentTypedWords = function (model) {\n\tvar _v0 = model.J;\n\tif (_v0 === 1) {\n\t\treturn 'The word you are typing will appear here';\n\t} else {\n\t\treturn $author$project$View$arrayToString(model.E);\n\t}\n};\nvar $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;\nvar $author$project$View$currentTypedChars = function (model) {\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class('current-typed-chars')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$text(\n\t\t\t\t$author$project$View$getCurrentTypedWords(model))\n\t\t\t]));\n};\nvar $author$project$Types$Restart = {$: 8};\nvar $elm$html$Html$a = _VirtualDom_node('a');\nvar $elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar $elm$html$Html$Attributes$classList = function (classes) {\n\treturn $elm$html$Html$Attributes$class(\n\t\tA2(\n\t\t\t$elm$core$String$join,\n\t\t\t' ',\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\t$elm$core$Tuple$first,\n\t\t\t\tA2($elm$core$List$filter, $elm$core$Tuple$second, classes))));\n};\nvar $elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar $elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\t$elm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\t$elm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar $elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\t$elm$html$Html$Events$on,\n\t\t'click',\n\t\t$elm$json$Json$Decode$succeed(msg));\n};\nvar $elm$html$Html$p = _VirtualDom_node('p');\nvar $author$project$View$header = A2(\n\t$elm$html$Html$div,\n\t_List_fromArray(\n\t\t[\n\t\t\t$elm$html$Html$Attributes$class('header')\n\t\t]),\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$html$Html$p,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$class('header-text')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$text('Typing Speed Test')\n\t\t\t\t])),\n\t\t\tA2(\n\t\t\t$elm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$classList(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple2('restart', true),\n\t\t\t\t\t\t\t_Utils_Tuple2('header-text', true)\n\t\t\t\t\t\t])),\n\t\t\t\t\t$elm$html$Html$Events$onClick($author$project$Types$Restart)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$text('restart')\n\t\t\t\t]))\n\t\t]));\nvar $author$project$View$approximateCPM = F2(\n\tfunction (x, model) {\n\t\treturn (x <= 0) ? 0 : ((x * 60) / model.W);\n\t});\nvar $elm$core$Array$filter = F2(\n\tfunction (isGood, array) {\n\t\treturn $elm$core$Array$fromList(\n\t\t\tA3(\n\t\t\t\t$elm$core$Array$foldr,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (x, xs) {\n\t\t\t\t\t\treturn isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;\n\t\t\t\t\t}),\n\t\t\t\t_List_Nil,\n\t\t\t\tarray));\n\t});\nvar $elm$core$Array$foldl = F3(\n\tfunction (func, baseCase, _v0) {\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldl, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldl, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\t$elm$core$Elm$JsArray$foldl,\n\t\t\tfunc,\n\t\t\tA3($elm$core$Elm$JsArray$foldl, helper, baseCase, tree),\n\t\t\ttail);\n\t});\nvar $elm$core$Elm$JsArray$map = _JsArray_map;\nvar $elm$core$Array$map = F2(\n\tfunction (func, _v0) {\n\t\tvar len = _v0.a;\n\t\tvar startShift = _v0.b;\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\tvar helper = function (node) {\n\t\t\tif (!node.$) {\n\t\t\t\tvar subTree = node.a;\n\t\t\t\treturn $elm$core$Array$SubTree(\n\t\t\t\t\tA2($elm$core$Elm$JsArray$map, helper, subTree));\n\t\t\t} else {\n\t\t\t\tvar values = node.a;\n\t\t\t\treturn $elm$core$Array$Leaf(\n\t\t\t\t\tA2($elm$core$Elm$JsArray$map, func, values));\n\t\t\t}\n\t\t};\n\t\treturn A4(\n\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\tA2($elm$core$Elm$JsArray$map, helper, tree),\n\t\t\tA2($elm$core$Elm$JsArray$map, func, tail));\n\t});\nvar $elm$core$Basics$round = _Basics_round;\nvar $elm$core$Basics$isInfinite = _Basics_isInfinite;\nvar $author$project$View$sanitize = function (x) {\n\treturn $elm$core$Basics$isInfinite(x) ? 0 : x;\n};\nvar $author$project$View$cpm = function (model) {\n\treturn $elm$core$String$fromInt(\n\t\t$elm$core$Basics$round(\n\t\t\t$author$project$View$sanitize(\n\t\t\t\tfunction (x) {\n\t\t\t\t\treturn A2($author$project$View$approximateCPM, x, model);\n\t\t\t\t}(\n\t\t\t\t\tA3(\n\t\t\t\t\t\t$elm$core$Array$foldl,\n\t\t\t\t\t\t$elm$core$Basics$add,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Array$map,\n\t\t\t\t\t\t\tfunction (w) {\n\t\t\t\t\t\t\t\treturn $elm$core$String$length(w.ak);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$Array$filter,\n\t\t\t\t\t\t\t\tfunction (w) {\n\t\t\t\t\t\t\t\t\treturn w.am === 1;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tmodel.u)))))));\n};\nvar $author$project$View$getCPM = function (model) {\n\tvar _v0 = model.J;\n\tif (_v0 === 1) {\n\t\treturn '0';\n\t} else {\n\t\treturn $author$project$View$cpm(model);\n\t}\n};\nvar $author$project$View$approximateWPM = F2(\n\tfunction (x, model) {\n\t\treturn (x <= 0) ? 0 : ((x * 60) / model.W);\n\t});\nvar $author$project$View$wpm = function (model) {\n\treturn $elm$core$String$fromInt(\n\t\t$elm$core$Basics$round(\n\t\t\t$author$project$View$sanitize(\n\t\t\t\tfunction (x) {\n\t\t\t\t\treturn A2($author$project$View$approximateWPM, x, model);\n\t\t\t\t}(\n\t\t\t\t\t$elm$core$Array$length(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Array$filter,\n\t\t\t\t\t\t\tfunction (w) {\n\t\t\t\t\t\t\t\treturn w.am === 1;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmodel.u))))));\n};\nvar $author$project$View$getWPM = function (model) {\n\tvar _v0 = model.J;\n\tif (_v0 === 1) {\n\t\treturn '0';\n\t} else {\n\t\treturn $author$project$View$wpm(model);\n\t}\n};\nvar $author$project$View$timeLeft = function (model) {\n\treturn $elm$core$String$fromInt(model.aO - model.W);\n};\nvar $author$project$View$statusText = function (model) {\n\tvar _v0 = model.J;\n\tswitch (_v0) {\n\t\tcase 1:\n\t\t\treturn 'Start typing to start the test';\n\t\tcase 0:\n\t\t\treturn $author$project$View$timeLeft(model);\n\t\tdefault:\n\t\t\treturn 'You\\'re done, press restart to try again!';\n\t}\n};\nvar $author$project$View$stats = function (model) {\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class('stats-container')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Attributes$class('status')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$p,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('status-text')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\t\t\t\t$author$project$View$statusText(model))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Attributes$class('metrics')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$html$Html$p,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('wpm')\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\t\t\t\t\t\t'WPM ' + $author$project$View$getWPM(model))\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$html$Html$p,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('cpm')\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\t\t\t\t\t\t'CPM ' + $author$project$View$getCPM(model))\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar $elm$html$Html$Attributes$id = $elm$html$Html$Attributes$stringProperty('id');\nvar $elm$core$Elm$JsArray$indexedMap = _JsArray_indexedMap;\nvar $elm$core$Array$indexedMap = F2(\n\tfunction (func, _v0) {\n\t\tvar len = _v0.a;\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\tvar initialBuilder = {\n\t\t\td: _List_Nil,\n\t\t\ta: 0,\n\t\t\tc: A3(\n\t\t\t\t$elm$core$Elm$JsArray$indexedMap,\n\t\t\t\tfunc,\n\t\t\t\t$elm$core$Array$tailIndex(len),\n\t\t\t\ttail)\n\t\t};\n\t\tvar helper = F2(\n\t\t\tfunction (node, builder) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldl, helper, builder, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\tvar offset = builder.a * $elm$core$Array$branchFactor;\n\t\t\t\t\tvar mappedLeaf = $elm$core$Array$Leaf(\n\t\t\t\t\t\tA3($elm$core$Elm$JsArray$indexedMap, func, offset, leaf));\n\t\t\t\t\treturn {\n\t\t\t\t\t\td: A2($elm$core$List$cons, mappedLeaf, builder.d),\n\t\t\t\t\t\ta: builder.a + 1,\n\t\t\t\t\t\tc: builder.c\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\treturn A2(\n\t\t\t$elm$core$Array$builderToArray,\n\t\t\ttrue,\n\t\t\tA3($elm$core$Elm$JsArray$foldl, helper, initialBuilder, tree));\n\t});\nvar $elm$html$Html$span = _VirtualDom_node('span');\nvar $elm$virtual_dom$VirtualDom$style = _VirtualDom_style;\nvar $elm$html$Html$Attributes$style = $elm$virtual_dom$VirtualDom$style;\nvar $author$project$View$spanForCurrentWord = F2(\n\tfunction (typedChar, expectedChar) {\n\t\tif (typedChar.$ === 1) {\n\t\t\treturn A2(\n\t\t\t\t$elm$html$Html$span,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$text(expectedChar)\n\t\t\t\t\t]));\n\t\t} else {\n\t\t\tvar c = typedChar.a;\n\t\t\treturn _Utils_eq(expectedChar, c) ? A2(\n\t\t\t\t$elm$html$Html$span,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($elm$html$Html$Attributes$style, 'color', '#7FFF00')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$text(expectedChar)\n\t\t\t\t\t])) : A2(\n\t\t\t\t$elm$html$Html$span,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($elm$html$Html$Attributes$style, 'color', 'red')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$text(expectedChar)\n\t\t\t\t\t]));\n\t\t}\n\t});\nvar $elm$core$String$foldr = _String_foldr;\nvar $elm$core$String$toList = function (string) {\n\treturn A3($elm$core$String$foldr, $elm$core$List$cons, _List_Nil, string);\n};\nvar $author$project$View$currentWordProgress = F2(\n\tfunction (currentTypedWords, word) {\n\t\tvar wordTextAsList = A2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (x) {\n\t\t\t\treturn $elm$core$String$fromChar(x);\n\t\t\t},\n\t\t\t$elm$core$String$toList(word.ai));\n\t\tvar currentWordArray = $elm$core$Array$fromList(wordTextAsList);\n\t\treturn $elm$core$Array$toList(\n\t\t\tA2(\n\t\t\t\t$elm$core$Array$indexedMap,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (idx, _char) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$author$project$View$spanForCurrentWord,\n\t\t\t\t\t\t\tA2($elm$core$Array$get, idx, currentTypedWords),\n\t\t\t\t\t\t\t_char);\n\t\t\t\t\t}),\n\t\t\t\tcurrentWordArray));\n\t});\nvar $author$project$View$getWordStyle = function (word) {\n\tvar _v0 = word.am;\n\tswitch (_v0) {\n\t\tcase 0:\n\t\t\treturn A2($elm$html$Html$Attributes$style, 'color', 'black');\n\t\tcase 1:\n\t\t\treturn A2($elm$html$Html$Attributes$style, 'color', '#7FFF00');\n\t\tdefault:\n\t\t\treturn A2($elm$html$Html$Attributes$style, 'color', 'red');\n\t}\n};\nvar $author$project$View$wordsToHTML = function (model) {\n\tvar words = model.u;\n\tvar currentPosition = model.y;\n\treturn $elm$core$Array$toList(\n\t\tA2(\n\t\t\t$elm$core$Array$indexedMap,\n\t\t\tF2(\n\t\t\t\tfunction (idx, word) {\n\t\t\t\t\treturn _Utils_eq(idx, currentPosition) ? A2(\n\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('currentWord'),\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$id(\n\t\t\t\t\t\t\t\t'word-' + $elm$core$String$fromInt(idx))\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\tA2($author$project$View$currentWordProgress, model.E, word)) : A2(\n\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$author$project$View$getWordStyle(word),\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('word'),\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$id(\n\t\t\t\t\t\t\t\t'word-' + $elm$core$String$fromInt(idx))\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$text(word.ai)\n\t\t\t\t\t\t\t]));\n\t\t\t\t}),\n\t\t\twords));\n};\nvar $author$project$View$wordsBox = function (model) {\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class('typing'),\n\t\t\t\t$elm$html$Html$Attributes$id('typing')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Attributes$class('words-box')\n\t\t\t\t\t]),\n\t\t\t\t$author$project$View$wordsToHTML(model))\n\t\t\t]));\n};\nvar $author$project$View$stylesheet = function (model) {\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class('root')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$author$project$View$header,\n\t\t\t\t$author$project$View$stats(model),\n\t\t\t\t$author$project$View$wordsBox(model),\n\t\t\t\t$author$project$View$currentTypedChars(model)\n\t\t\t]));\n};\nvar $author$project$View$view = function (model) {\n\treturn $author$project$View$stylesheet(model);\n};\nvar $author$project$Main$main = $elm$browser$Browser$element(\n\t{\n\t\ta3: function (_v0) {\n\t\t\treturn $author$project$State$initialState;\n\t\t},\n\t\tba: $author$project$State$subscriptions,\n\t\tbc: $author$project$State$update,\n\t\tbd: $author$project$View$view\n\t});\n_Platform_export({'Main':{'init':$author$project$Main$main(\n\t$elm$json$Json$Decode$succeed(0))(0)}});}(this));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.css';\nimport { Elm } from './Main.elm';\nimport * as serviceWorker from './serviceWorker';\n\nvar app = Elm.Main.init({\n  node: document.getElementById('root')\n});\napp.ports.fetchBoundingClientRect.subscribe(function(id) {\n  var entity = document.getElementById(id);\n  app.ports.setBoundingClientRect.send(entity ? entity.getBoundingClientRect() : null);\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}